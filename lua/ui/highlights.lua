local hl = require "utils.hl"
local general = require "utils.general"
local extend_tbl = general.extend_tbl
local sethl_groups = hl.sethl_groups
local gethl = hl.gethl

local highlights = {}

local hl_groups = {
  -- UI
  WinSeparator = { link = "LineNr" },
  OverLength = { bg = "#840000" },
  FloatBorder = { fg = "LineNr", bg = "NONE" },
  NvimSeparator = { link = "Error" },
  HighlightedYankRegion = {
    reverse = true,
  },

  StatusLineLspWarning = { fg = gethl("LspDiagnosticsWarning", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineLspInfo = { fg = gethl("LspDiagnosticsInfo", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineLspError = { fg = gethl("LspDiagnosticsError", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineLspHint = { fg = gethl("LspDiagnosticsHint", "fg"), bg = gethl("StatusLine", "bg") },

  StatusLineGitAdd = { fg = gethl("GitSignsAdd", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineGitChange = { fg = gethl("GitSignsChange", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineGitDelete = { fg = gethl("GitSignsDelete", "fg"), bg = gethl("StatusLine", "bg") },

  StatusLineFilename = { fg = gethl("StatusLine", "fg"), bg = gethl("StatusLine", "bg") },
  StatusLineInactive = { fg = gethl("Whitespace", "fg"), bg = gethl("StatusLine", "bg") },
  -- StatuslineFileinfo = { fg = gethl(hlgroup_name, attr) }

  StatuslineError = { fg = gethl("ErrorMsg", "fg"), bg = gethl("StatusLine", "bg") },
  StatuslineModified = { fg = gethl("Changed", "fg"), bg = gethl("StatusLine", "bg") },
  StatuslineGitAdd = { fg = gethl("GitSignsAdd", "fg"), bg = gethl("StatusLine", "bg") },
  StatuslineGitChange = { fg = gethl("GitSignsChange", "fg"), bg = gethl("StatusLine", "bg") },
  StatuslineGitDelete = { fg = gethl("GitSignsDelete", "fg"), bg = gethl("StatusLine", "bg") },

  CmpSel = { link = "Visual" },

  -- Navbuddy
  -- NavbuddyFile = { link = "Directory" },
  -- NavbuddyModule = { link = "Title" },
  -- NavbuddyNamespace = { link = "Structure" },
  -- NavbuddyMethod = { link = "Method" },
  -- NavbuddyProperty = { link = "Statement" },
  -- NavbuddyFunction = { link = "Function" },
  -- NavbuddyVariable = { link = "Special" },
  -- NavbuddyConstant = { link = "Constant" },
  -- NavbuddyString = { link = "String" },
  -- NavbuddyNumber = { link = "Number" },
  -- NavbuddyBoolean = { link = "Boolean" },
  -- NavbuddyKey = { link = "keyword" },
  -- NavbuddyStruct = { link = "Structure" },
  -- NavbuddyEvent = { link = "Normal" },
  -- NavbuddyOperator = { link = "Operator" },
  -- NavbuddyTypeParameter = { link = "Typedef" },
  -- -- NavbuddyCursorLineFile = { fg = "Red" },
  -- -- NavbuddyCursorLineModule = { fg = "Red" },
  -- -- NavbuddyCursorLineNamespace = { fg = "Orange" },
  -- NavbuddyPackage = { fg = "Blue" },
  -- -- NavbuddyCursorLinePackage = { link = "Method" },
  -- NavbuddyClass = { fg = "Blue" },
  -- -- NavbuddyCursorLineClass = { fg = "Blue" },
  -- -- NavbuddyCursorLineMethod = { link = "Method" },
  -- -- NavbuddyCursorLineProperty = { bg = "Orange" },
  -- NavbuddyField = { fg = "Blue" },
  -- -- NavbuddyCursorLineField = { bg = "Blue" },
  -- NavbuddyConstructor = { fg = "Blue" },
  -- -- NavbuddyCursorLineConstructor = { bg = "Blue" },
  -- NavbuddyEnum = { link = "Enum" },
  -- -- NavbuddyCursorLineEnum = { bg = "Blue" },
  -- NavbuddyInterface = { fg = "Blue" },
  -- -- NavbuddyCursorLineInterface = { bg = "Blue" },
  -- -- NavbuddyCursorLineFunction = { link = "Function" },
  -- -- NavbuddyCursorLineVariable = { bg = "Orange" },
  -- -- NavbuddyCursorLineConstant = { bg = "Orange" },
  -- -- NavbuddyCursorLineString = { bg = "Green" },
  -- -- NavbuddyCursorLineNumber = { bg = "Orange" },
  -- -- NavbuddyCursorLineBoolean = { bg = "Orange" },
  -- NavbuddyArray = { link = "Array" },
  -- -- NavbuddyCursorLineArray = { link = "Array" },
  -- NavbuddyObject = { fg = "Blue" },
  -- -- NavbuddyCursorLineObject = { bg = "Blue" },
  -- -- NavbuddyCursorLineKey = { bg = "Orange" },
  -- NavbuddyNull = { fg = "Blue" },
  -- -- NavbuddyCursorLineNull = { bg = "Blue" },
  -- NavbuddyEnumMember = { fg = "Blue" },
  -- NavbuddyCursorLineEnumMember = { bg = "lCursor" },
  -- NavbuddyCursorLineStruct = { bg = "lCursor" },
  -- NavbuddyCursorLineEvent = { bg = "lCursor" },
  -- NavbuddyCursorLineOperator = { bg = "lCursor" },
  -- NavbuddyCursorLineTypeParameter = { bg = "lCursor" },
  -- NavbuddyCursorLine = { link = "lCursor" },
  -- NavbuddyCursor = { link = "lCursor" },
  -- NavbuddyName = { link = "IncSearch" },
  -- NavbuddyScope = { link = "Visual" },
  -- NavbuddyFloatBorder = { link = "FloatBorder" },
  -- NavbuddyNormalFloat = { link = "NormalFloat" },

  --   ColorColumn = { bg = c_macroBg2 },
  --   Conceal = { bold = true, fg = c_macroGray2 },
  CurSearch = { link = "IncSearch" },
  --   Cursor = { bg = c_macroFg0, fg = c_macroBg1 },
  CursorColumn = { link = "CursorLine" },
  CursorIM = { link = "Cursor" },
  --   CursorLine = { bg = c_macroBg2 },
  --   CursorLineNr = { fg = c_macroGray0, bold = true },
  --   DebugPC = { bg = c_winterRed },
  --   DiffAdd = { bg = c_winterGreen },
  --   DiffChange = { bg = c_winterBlue },
  --   DiffDelete = { fg = c_macroBg4 },
  --   DiffText = { bg = c_sumiInk6 },
  --   Directory = { fg = c_macroBlue1 },
  -- EndOfBuffer = { link = "ZenBg" }, -- INFO: buffer
  --   ErrorMsg = { fg = c_lotusRed1 },
  --   FloatBorder = { bg = c_macroBg0, fg = c_sumiInk6 },
  --   FloatFooter = { bg = c_macroBg0, fg = c_macroBg5 },
  --   FloatTitle = { bg = c_macroBg0, fg = c_macroGray2, bold = true },
  --   FoldColumn = { fg = c_macroBg5 },
  --   Folded = { bg = c_macroBg2, fg = c_lotusGray },
  Ignore = { link = "NonText" },
  --   IncSearch = { bg = c_carpYellow, fg = c_waveBlue0 },
  --   LineNr = { fg = c_macroBg5 },
  --   MatchParen = { bg = c_macroBg4 },
  --   ModeMsg = { fg = "Red", bold = true },
  --   MoreMsg = { fg = c_macroBlue0 },
  --   MsgArea = { fg = c_macroFg1 },
  --   MsgSeparator = { bg = c_macroBg0 },
  --   NonText = { fg = c_macroBg5 },
  --   Normal = { bg = c_macroBg1, fg = c_macroFg0 },
  --   NormalFloat = { bg = c_macroBg0, fg = c_macroFg1 },
  NormalNC = { link = "Normal" },
  --   Pmenu = { bg = c_macroBg3, fg = c_macroFg1 },
  --   PmenuSbar = { bg = c_macroBg4 },
  --   PmenuSel = { bg = c_macroBg4, fg = "NONE" },
  --   PmenuThumb = { bg = c_macroBg5 },
  Question = { link = "MoreMsg" },
  --   QuickFixLine = { bg = c_macroBg3 },
  --   Search = { bg = c_macroBg4 },
  --   SignColumn = { fg = c_macroGray2 },
  --   SpellBad = { underdashed = true },
  --   SpellCap = { underdashed = true },
  --   SpellLocal = { underdashed = true },
  --   SpellRare = { underdashed = true },
  --   StatusLine = { bg = c_macroBg3, fg = c_macroFg1 },
  --   StatusLineNC = { bg = c_macroBg2, fg = c_macroBg5 },
  --   Substitute = { bg = c_autumnRed, fg = c_macroFg0 },
  TabLine = { link = "StatusLineNC" },
  TabLineFill = { link = "Normal" },
  TabLineSel = { link = "StatusLine" },
  --   TermCursor = { fg = c_macroBg1, bg = "Red" },
  --   TermCursorNC = { fg = c_macroBg1, bg = c_macroAsh },
  --   Title = { bold = true, fg = c_macroBlue1 },
  --   Underlined = { fg = "Teal", underline = true },
  VertSplit = { link = "WinSeparator" },
  --   Visual = { bg = c_macroBg4 },
  VisualNOS = { link = "Visual" },
  --   WarningMsg = { fg = c_roninYellow },
  --   Whitespace = { fg = c_macroBg4 },
  WildMenu = { link = "Pmenu" },
  --   WinBar = { bg = "NONE", fg = c_macroFg1 },
  WinBarNC = { link = "WinBar" },
  --   WinSeparator = { fg = c_macroBg4 },
  lCursor = { link = "Cursor" },
  --
  --   -- Syntax
  --   Boolean = { fg = "Orange", bold = true },
  Character = { link = "String" },
  --   Comment = { fg = c_macroAsh },
  --   Constant = { fg = "Orange" },
  --   Delimiter = { fg = c_macroGray1 },
  --   Error = { fg = c_lotusRed1 },
  --   Exception = { fg = "Red" },
  Float = { link = "Number" },
  --   Function = { fg = c_macroBlue1 },
  --   Identifier = { fg = c_macroFg0 },
  --   Keyword = { fg = c_macroViolet },
  --   Number = { fg = c_macroPink },
  --   Operator = { fg = "Red" },
  --   PreProc = { fg = "Red" },
  --   Special = { fg = "Teal" },
  --   SpecialKey = { fg = c_macroGray2 },
  --   Statement = { fg = c_macroViolet },
  -- String = { link = "MoreMsg" },
  --   Todo = { fg = c_macroBg0, bg = c_macroBlue0, bold = true },
  --   Type = { fg = c_macroAqua },
  --
  --   -- Treesitter syntax
  ["@attribute"] = { link = "Constant" },
  ["@constructor"] = { fg = "Teal" },
  -- ["@constructor.lua"] = { fg = c_macroViolet },
  ["@exception"] = { bold = true, fg = "Red" },
  ["@keyword.luap"] = { link = "@string.regex" },
  ["@keyword.operator"] = { bold = true, fg = "Red" },
  ["@keyword.return"] = { fg = "Red", italic = true },
  ["@namespace"] = { fg = "Orange" },
  ["@operator"] = { link = "Operator" },
  -- ["@parameter"] = { fg = c_macroGray0 },
  ["@string"] = { link = "String" },
  ["@character"] = { link = "String" },
  -- ["@punctuation.bracket"] = { fg = c_macroGray1 },
  -- ["@punctuation.delimiter"] = { fg = c_macroGray1 },
  ["@punctuation.special"] = { fg = "Teal" },
  ["@string.escape"] = { fg = "Orange" },
  ["@string.regex"] = { fg = "Orange" },
  ["@symbol"] = { link = "Normal" },
  ["@tag.attribute"] = { link = "Normal" },
  --   ["@tag.delimiter"] = { fg = c_macroGray1 },
  --   ["@text.danger"] = { bg = c_lotusRed1, fg = c_macroFg0, bold = true },
  --   ["@text.diff.add"] = { fg = c_autumnGreen },
  --   ["@text.diff.delete"] = { fg = c_autumnRed },
  --   ["@text.emphasis"] = { italic = true },
  ["@text.environment"] = { link = "Keyword" },
  ["@text.environment.name"] = { link = "String" },
  ["@text.literal"] = { link = "String" },
  --   ["@text.note"] = { bg = c_waveAqua0, fg = c_waveBlue0, bold = true },
  ["@text.quote"] = { link = "@parameter" },
  -- ["@text.reference.markdown_inline"] = { link = "htmlLink" },
  --   ["@text.strong"] = { bold = true },
  ["@text.title"] = { link = "Function" },
  --   ["@text.title.1.markdown"] = { fg = "Red" },
  --   ["@text.title.2.markdown"] = { fg = "Red" },
  --   ["@text.title.3.markdown"] = { fg = "Red" },
  --   ["@text.title.4.markdown"] = { fg = "Red" },
  --   ["@text.title.5.markdown"] = { fg = "Red" },
  --   ["@text.title.6.markdown"] = { fg = "Red" },
  --   ["@text.title.1.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.title.2.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.title.3.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.title.4.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.title.5.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.title.6.marker.markdown"] = { link = "Delimiter" },
  --   ["@text.todo.checked"] = { fg = c_macroAsh },
  --   ["@text.todo.unchecked"] = { fg = "Red" },
  --   ["@text.uri.markdown_inline"] = { link = "htmlString" },
  --   ["@text.warning"] = { bg = c_roninYellow, fg = c_waveBlue0, bold = true },
  --   ["@variable"] = { fg = c_macroFg0 },
  --   ["@variable.builtin"] = { fg = "Red", italic = true },
  --
  --   -- LSP semantic
  ["@lsp.mod.readonly"] = { link = "Constant" },
  ["@lsp.mod.typeHint"] = { link = "Type" },
  ["@lsp.type.builtinConstant"] = { link = "@constant.builtin" },
  --   ["@lsp.type.comment"] = { fg = "NONE" },
  --   ["@lsp.type.macro"] = { fg = c_macroPink },
  ["@lsp.type.magicFunction"] = { link = "@function.builtin" },
  ["@lsp.type.method"] = { link = "@method" },
  ["@lsp.type.namespace"] = { link = "@namespace" },
  ["@lsp.type.parameter"] = { link = "@parameter" },
  ["@lsp.type.selfParameter"] = { link = "@variable.builtin" },
  ["@lsp.type.variable"] = { fg = "NONE" },
  ["@lsp.typemod.function.builtin"] = { link = "@function.builtin" },
  ["@lsp.typemod.function.defaultLibrary"] = { link = "@function.builtin" },
  ["@lsp.typemod.function.readonly"] = { bold = true, link = "Blue" },
  ["@lsp.typemod.keyword.documentation"] = { link = "Special" },
  ["@lsp.typemod.method.defaultLibrary"] = { link = "@function.builtin" },
  ["@lsp.typemod.operator.controlFlow"] = { link = "@exception" },
  ["@lsp.typemod.operator.injected"] = { link = "Operator" },
  ["@lsp.typemod.string.injected"] = { link = "String" },
  ["@lsp.typemod.variable.defaultLibrary"] = { link = "Special" },
  ["@lsp.typemod.variable.global"] = { link = "Constant" },
  ["@lsp.typemod.variable.injected"] = { link = "@variable" },
  ["@lsp.typemod.variable.static"] = { link = "Constant" },
  --
  --   -- LSP
  --   LspCodeLens = { fg = c_macroAsh },
  LspInfoBorder = { link = "FloatBorder" },
  LspReferenceRead = { link = "LspReferenceText" },
  --   LspReferenceText = { bg = c_winterYellow },
  --   LspReferenceWrite = { bg = c_winterYellow, underline = true },
  --   LspSignatureActiveParameter = { fg = c_roninYellow },
  --
  --   -- Diagnostic
  --   DiagnosticError = { fg = "Red" },
  --   DiagnosticHint = { fg = c_macroAqua },
  --   DiagnosticInfo = { fg = c_macroBlue1 },
  --   DiagnosticOk = { fg = c_macroGreen1 },
  --   DiagnosticWarn = { fg = c_carpYellow },
  --   DiagnosticSignError = { fg = "Red" },
  --   DiagnosticSignHint = { fg = c_macroAqua },
  --   DiagnosticSignInfo = { fg = c_macroBlue1 },
  --   DiagnosticSignWarn = { fg = c_carpYellow },
  --   DiagnosticUnderlineError = { sp = "Red", undercurl = true },
  --   DiagnosticUnderlineHint = { sp = c_macroAqua, undercurl = true },
  --   DiagnosticUnderlineInfo = { sp = c_macroBlue1, undercurl = true },
  --   DiagnosticUnderlineWarn = { sp = c_carpYellow, undercurl = true },
  --   DiagnosticVirtualTextError = { bg = c_winterRed, fg = "Red" },
  --   DiagnosticVirtualTextHint = { bg = c_winterGreen, fg = c_macroAqua },
  --   DiagnosticVirtualTextInfo = { bg = c_winterBlue, fg = c_macroBlue1 },
  --   DiagnosticVirtualTextWarn = { bg = c_winterYellow, fg = c_carpYellow },
  --
  --   -- Filetype
  --   -- Git
  --   gitHash = { fg = c_macroAsh },
  --
  --   -- Sh/Bash
  bashSpecialVariables = { link = "Constant" },
  shAstQuote = { link = "Constant" },
  shCaseEsac = { link = "Operator" },
  shDeref = { link = "Special" },
  shDerefSimple = { link = "shDerefVar" },
  shDerefVar = { link = "Constant" },
  shNoQuote = { link = "shAstQuote" },
  shQuote = { link = "String" },
  shTestOpr = { link = "Operator" },
  --
  --   -- HTML
  --   htmlBold = { bold = true },
  --   htmlBoldItalic = { bold = true, italic = true },
  --   htmlH1 = { fg = "Red", bold = true },
  --   htmlH2 = { fg = "Red", bold = true },
  --   htmlH3 = { fg = "Red", bold = true },
  --   htmlH4 = { fg = "Red", bold = true },
  --   htmlH5 = { fg = "Red", bold = true },
  --   htmlH6 = { fg = "Red", bold = true },
  --   htmlItalic = { italic = true },
  --   htmlLink = { fg = c_lotusBlue, underline = true },
  --   htmlSpecialChar = { link = "SpecialChar" },
  --   htmlSpecialTagName = { fg = c_macroViolet },
  --   htmlString = { fg = c_macroAsh },
  --   htmlTagName = { link = "Tag" },
  --   htmlTitle = { link = "Title" },
  --
  --   -- Markdown
  --   markdownBold = { bold = true },
  --   markdownBoldItalic = { bold = true, italic = true },
  --   markdownCode = { fg = c_macroGreen1 },
  --   markdownCodeBlock = { fg = c_macroGreen1 },
  --   markdownError = { link = "NONE" },
  --   markdownEscape = { fg = "NONE" },
  --   markdownH1 = { link = "htmlH1" },
  --   markdownH2 = { link = "htmlH2" },
  --   markdownH3 = { link = "htmlH3" },
  --   markdownH4 = { link = "htmlH4" },
  --   markdownH5 = { link = "htmlH5" },
  --   markdownH6 = { link = "htmlH6" },
  --   markdownListMarker = { fg = c_autumnYellow },
  --
  --   -- Checkhealth
  --   healthError = { fg = c_lotusRed0 },
  --   healthSuccess = { fg = c_springGreen },
  --   healthWarning = { fg = c_roninYellow },
  helpHeader = { link = "Title" },
  helpSectionDelim = { link = "Title" },
  --
  --   -- Qf
  qfFileName = { link = "Directory" },
  qfLineNr = { link = "Number" },

  --   -- Plugins
  --   -- fugitive
  --   DiffAdded = { fg = c_autumnGreen },
  --   DiffChanged = { fg = c_autumnYellow },
  --   DiffDeleted = { fg = c_autumnRed },
  --   DiffNewFile = { fg = c_autumnGreen },
  --   DiffOldFile = { fg = c_autumnRed },
  --   DiffRemoved = { fg = c_autumnRed },
  --   fugitiveHash = { link = "gitHash" },
  --   fugitiveHeader = { link = "Title" },
  --   fugitiveStagedModifier = { fg = c_autumnGreen },
  --   fugitiveUnstagedModifier = { fg = c_autumnYellow },
  --   fugitiveUntrackedModifier = { fg = c_macroAqua },

  --   -- nvim-dap-ui
  --   DapUIBreakpointsCurrentLine = { bold = true, fg = c_macroFg0 },
  --   DapUIBreakpointsDisabledLine = { link = "Comment" },
  --   DapUIBreakpointsInfo = { fg = c_macroBlue0 },
  --   DapUIBreakpointsPath = { link = "Directory" },
  --   DapUIDecoration = { fg = c_sumiInk6 },
  --   DapUIFloatBorder = { fg = c_sumiInk6 },
  --   DapUILineNumber = { fg = "Teal" },
  --   DapUIModifiedValue = { bold = true, fg = "Teal" },
  --   DapUIPlayPause = { fg = c_macroGreen1 },
  --   DapUIRestart = { fg = c_macroGreen1 },
  --   DapUIScope = { link = "Special" },
  --   DapUISource = { fg = "Red" },
  --   DapUIStepBack = { fg = "Teal" },
  --   DapUIStepInto = { fg = "Teal" },
  --   DapUIStepOut = { fg = "Teal" },
  --   DapUIStepOver = { fg = "Teal" },
  --   DapUIStop = { fg = c_lotusRed0 },
  --   DapUIStoppedThread = { fg = "Teal" },
  --   DapUIThread = { fg = c_macroFg0 },
  --   DapUIType = { link = "Type" },
  --   DapUIUnavailable = { fg = c_macroAsh },
  --   DapUIWatchesEmpty = { fg = c_lotusRed0 },
  --   DapUIWatchesError = { fg = c_lotusRed0 },
  --   DapUIWatchesValue = { fg = c_macroFg0 },
  --
  --   -- lazy.nvim
  --   LazyProgressTodo = { fg = c_macroBg5 },
  --
  --   -- statusline
  --   StatusLineGitAdded = { bg = c_macroBg3, fg = c_macroGreen1 },
  --   StatusLineGitChanged = { bg = c_macroBg3, fg = c_carpYellow },
  --   StatusLineGitRemoved = { bg = c_macroBg3, fg = "Red" },
  --   StatusLineHeader = { bg = c_macroBg5, fg = c_macroFg1 },
  --   StatusLineHeaderModified = { bg = "Red", fg = c_macroBg1 },
}

local fg, bg = gethl("Normal", "fg"), gethl("NormalFloat", "bg")

-- local bg_alt = get_hlgroup("Visual").bg
local bg_alt = gethl("CursorLine", "bg")
-- local green = gethl("String", "fg")
local green = gethl("String", "fg")
-- local red = get_hlgroup("Error").fg
local red = gethl("Error", "fg")

local nv_chad_hl = {
  TelescopeBorder = { fg = bg_alt, bg = bg },
  TelescopeNormal = { bg = bg },
  TelescopePreviewBorder = { fg = bg, bg = bg },
  TelescopePreviewNormal = { bg = bg },
  TelescopePreviewTitle = { fg = bg, bg = green },
  TelescopePromptBorder = { fg = bg_alt, bg = bg_alt },
  TelescopePromptNormal = { fg = fg, bg = bg_alt },
  TelescopePromptPrefix = { fg = red, bg = bg_alt },
  TelescopePromptTitle = { fg = bg, bg = red },
  TelescopeResultsBorder = { fg = bg, bg = bg },
  TelescopeResultsNormal = { bg = bg },
  TelescopeResultsTitle = { fg = bg, bg = bg },
}

highlights = extend_tbl(highlights, hl_groups)

local colorscheme = vim.g.colors_name
if not string.find(colorscheme, "catppuccin") then
  highlights = extend_tbl(hl_groups, nv_chad_hl)
end

if string.find(colorscheme, "zen") then
  highlights = extend_tbl(highlights, {
    String = { fg = "#819B69", bg = "NONE" },
    Constant = { link = "String" },
  })
end

sethl_groups(highlights)
